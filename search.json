[
  {
    "objectID": "posts/SquarePacking/index.html",
    "href": "posts/SquarePacking/index.html",
    "title": "Square Packing",
    "section": "",
    "text": "My senior project is to attempt to use a reinforcement learning algorithm based on a Deep Deterministic Policy Gradient model for use with a continuous observation and action space, in order to solve the Square Packing in a Square problem for N=11 squares.\nThat was a very intelligent sounding sentence. Let’s break it down:\n\nSquare Packing in a Square\nThe Square Packing in a Square problem is an unsolved problem in mathematics where the goal is to pack N squares with a side length of 1 into another square, while wasting as little space as possible.\nThe technical wording is\n\nWhat is the asymptotic growth rate of wasted space for square packing in a half-integer square?\n\nI’m not going to be solving that. Instead I’m going to attempt to use Reinforcement Learning (RL) to attempt to figure out a better solution for me. I have no idea how well it will work.\nThere are known configurations for N=1-10 squares, but 11 (and some others) are only approximately solved. This tries to find a more optimal configuration for N=11 squares by using RL instead of pure math.\nThe theoretial optimal packing has a side length of 3.789, but the best known is 3.877084\n\n\n\nDDPG\nDDPG model is a kind of actor-critic setup (not technically a model) that allows continuous rather than discrete observation and action spaces. This is important, because I want to find a very precise solution, as opposed to infinitely increasing the discrete resolution of steps the AI can take.\nAn actor-critic setup has 2 models (though the DDPG setup has 4, for training purposes). One model is the actor, which takes in an observation from the enviorment, learns to outputs actions to take in the enviorment, optimized to some reward function. The other model takes in an observation from the enviorment and the action taken by the actor for that observation, and learns to output the reward that that action will get for that observation. The actor model can then use the output of the critic model to train itself.\nIt’s kind of like learning to dance to a song on a stage based on some guy in the back either clapping or yelling “boooo!”. Eventually you can start to understand what the critic is asking for.\nThis is the fundemental equation behind the DDPG algorithm. I understood it at one point, but have since forgot. See the above links for a real explanation.\n\n\n\nImplementation\nBoth the action and observation spaces will have the shape (3*N, ) (N is the number of squares, so 11) where each square has an x, y and rotation values. The actor’s actions simply get added to the current square positions and rotations (since the actor actions can be negative), so the actor can make small adjustments to squeze the squares closer to each other.\nThe reward function hasn’t been developed yet, but it will involve something like steeply punishing overlapping squares, and incentivizing smaller “bounding square” side lengths (like a bounding rectangle, but a square).\nI’ll be using Shapely for the geometry handling:\n\n\nCode\n# This is an example of converting the action space into a shapely object\nMultiPolygon(convert2shapely([(random.uniform(0, space), random.uniform(0, space), random.uniform(1, 2*math.pi)) for i in range(N)], side_len=scale))\n\n\n\n\n\n\n\n\n\nI’ll use Tensorflow for the models, this is my proposed actor network structure:\n\nAnd for the RL enviorment, I’ll use the popular Gymnasium library, specifically my own personal SimpleGym class which is a helpful abstraction on top of gymnasium:"
  },
  {
    "objectID": "posts/GeoDoodle/index.html",
    "href": "posts/GeoDoodle/index.html",
    "title": "GeoDoodle",
    "section": "",
    "text": "I love doodling on graph paper.\nIt’s just something I’ve done for a long time, since I was a kid. It’s something to keep my hands busy while I sit in church or class. It occupies just enough of my mind to keep me entertained, but not too much that I can’t pay attention. It’s perfect.\nAnd over the years, I’ve gotten pretty good, if I don’t say so myself. I have something like 3 or 4 notebooks full of these sorts of patterns:\n    \nBut that’s the problem, isn’t it. They’re in notebooks. I’m not even sure where they are. I don’t look at them or add to them anymore.\n\nHistory\nEver since my very 2nd programming class (the first class was all terminal based), I had the idea for “automated graph paper”. All the lines line up with the dots. It wouldn’t be that difficult to make a program that had a bunch of dots and let you draw lines between them. Back then I had grand ideas of mirroring, selecting, copy/pasting, and repeating lines, but I didn’t have any way to execute them. I had an old, outdated, unsupported (even back then) freeGLUT C++ framework that my class gave me that I hacked together to show an array of dots on the screen, and was barely able to connect lines between them. And then the house of cards that was my code fell apart and I moved onto other things.\nAbout a year later, after starting many other projects, and knowing way, way more, I discovered Python. I realized that my old idea I loved so much was still a cool idea, and I got excited and I ended up scrapping the entire codebase and rewriting the entire thing from scratch in Python (using pygame). I got it roughtly to where it was before, in about 4 hours. It’s pretty cool to see yourself improve in such an obvious way. I then added a bunch more features and made everything a lot nicer (pygame is an excellent API), including adding menus and options and a better repeating system. I eventually got stymied by the GUI though. At that point I hadn’t really done much with GUI’s, and I tried using pygame-gui, which isn’t a bad API, it’s just really not meant for what I wanted. I ended up writing huge, very nasty wrappers around their classes and it just wasn’t worth it. It again, became a house of cards and I saw that.\nA couple months later, I had the idea to use Qt. It was something I’d wanted to learn for a while, but I never really had a project suited to it, until I realized this was perfect. Turns out, Qt is fantastic. There’s a reason it’s so popular. It definitely takes some getting used to, but it’s all very clean, and QtCreator is super handy. Using Qt allowed me to expand even further, and add more features far more intuitively.\nA few months after that, I took a linear algebra course and had the realization that a bunch of the problems I had with repeating patterns and keeping track of coordinates could all be solved by using matrices for coordinates and multiplying by a transformation matrix. I then rewrote the whole codebase (again) to use numpy to represent dots and lines instead. That solved a ton of conceptual problems, and allowed me to add a bunch of features like mirroring and rotating and scaling. It also cleaned a the code up a ton too. That time it wasn’t a total rewrite, because I was able to re-use a lot of the PyQt GUI elements.\nThis is the last working version of GeoDoodle I had in Python \nAll these versions had a few shared, fundemental problems, however:\n\nThe coordinate systems where complicated. Even after I switched to using proper linear algebra, it was still complicated to keep track of, and involved writing my own coordinate system & utilies, essentially.\nDeployment. I love Python to pieces, and it’s the optimal programming language for a lot of things, but it really doesn’t deploy to other platforms very well. I always wanted to show my friends & family my cool program, but I never could, because trying to say “go into the terminal, git clone my repo, install python, and run the main.py file” really isn’t possible for my non-tech savvy mother. I tried a few things like pyqt5deploy and the Qt for Android tutorials, but I couldn’t get them to work\nEfficiency. When a pattern we want to repeat is small enough (meaning that more of them fit on the screen), and has too many lines in it, that means we could be drawing up to hundreds or thousands of lines on the screen, and if I want the user to be able to move around or add lines, depending on how I do it, that could mean they have to update in real-time. This was obviously a problem for freeGLUT (where I had to make raw OpenGL commands, which I didn’t know how to do correctly), and pygame (which isn’t really optimized for that sort of thing), but for PyQt you might not think it would be a problem. It was certainly better than the first 2, but it still got unusably slow under those conditions. I tried optimizing using OpenGL, but that only led down a deeper rabit hole I didn’t really want to go down.\n\n\n\nEnter: JavaScript\nRecently (as of this post) I got an internship writing TypeScript React code. I previously didn’t know Java/TypeScript, so I had a couple week long crash course on JS programming before I started. After I started, I immediately realized the potential JavaScript holds. Not because it’s good or proper (I think JS is terribly janky sometimes), but because it’s not. JS is geared towards writing UIs, which it does well. And part of UIs seems to be inherent jankiness, it seems. Lambda’s galore, strange, optional syntax (semicolons aren’t required, but everyone uses them anyway??), and objects that don’t act like objects in any other language I’d learned. It’s almost as if JS isn’t Object-Oriented, but instead Event-Oriented.\nHowever it has a number of key advantages. Aside from being made for making UIs, like I mentioned, it’s supported everywhere and is made for deployment. Very quickly after learning it I made a couple projects, including Debate-Tracker, and EZRegex. I then realized: my favorite project, my “unique” idea (I haven’t researched if it actually is, and I don’t intend to), GeoDoodle, is perfect for JS. The project is largely UI elements, once the base part is done, I wanted to use it from both my computer and my phone, and SVG is the natural format for the project. Given that HTML integrates seemlessly with SVG, React was perfect.\nSo of course, I started from scratch and rewrote the whole thing again from the ground up in another language. It’s a lot easier the 4th (5th?) time you do it, because you know beforehand what a lot of the problems you’re going to run into are, and how to solve them, and you also know what you need to do in order to generalize things for future features so you don’t end up refactoring your code too many times.\nI quickly got an MVP working (after a weekend of working on it obsessively), and kept adding to it. It now has multiple menus, including a controls menu instead of just using keyboard shortcuts, a help menu with a guided tour (surprisingly easy to make), multiple kinds of mirroring (you’d think it would be simple, but it’s more complex than you think), file saving, either natively to SVG files or to the local storage, basic repeating (is what I’m working on right now), and more. You can check it out at smartycope.github.io/geodoodle. I have it hosted on GitHub pages, and eventually I’ll probably by a URL for it to live at.\nThis time, I think I finally got it right. The code is clean and maintainable enough that I think when I inevitably come back to it in a year or so after I lose intrest, I’ll be able to pick it up again and just add features to it instead of rewriting it again. And the fact that I actually know how to use git now helps with that as well.\nYou can try it here, if you’d like:"
  },
  {
    "objectID": "posts/SeniorProject/index.html",
    "href": "posts/SeniorProject/index.html",
    "title": "Senior Project",
    "section": "",
    "text": "TODO"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Copeland Carter\n\nData Scientist | Software Engineer | Full Stack Developer\n\n\n\nCopeland Carter (smartycope) loves his wife, his personal programming projects, Brandon Sanderson novels, rollerblading, and data science."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Copeland Carter’s Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nInstalling Tensorflow\n\n\n\n\n\n\npython\n\n\nML\n\n\n\n\n\n\n\n\n\nSep 24, 2026\n\n\nCopeland Carter\n\n\n\n\n\n\n\n\n\n\n\n\nSenior Project\n\n\n\n\n\n\npython\n\n\nprojects\n\n\nhighlighted\n\n\n\n\n\n\n\n\n\nJul 1, 2024\n\n\nCopeland Carter\n\n\n\n\n\n\n\n\n\n\n\n\nGeoDoodle\n\n\n\n\n\n\nprojects\n\n\nopen source\n\n\njavascript\n\n\nhighlighted\n\n\n\n\n\n\n\n\n\nMay 15, 2024\n\n\nCopeland Carter\n\n\n\n\n\n\n\n\n\n\n\n\nSquare Packing\n\n\n\n\n\n\nprojects\n\n\npython\n\n\nML\n\n\nhighlighted\n\n\n\n\n\n\n\n\n\nApr 30, 2024\n\n\nCopeland Carter\n\n\n\n\n\n\n\n\n\n\n\n\nRose (The Relationship Evaluation Algorithm)\n\n\n\n\n\n\npython\n\n\nopen source\n\n\nprojects\n\n\nhighlighted\n\n\n\n\n\n\n\n\n\nJul 1, 2023\n\n\nCopeland Carter\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "familyGraphs.html",
    "href": "familyGraphs.html",
    "title": "Final Project Data",
    "section": "",
    "text": "Code\n# data = gsheet2tbl('https://docs.google.com/spreadsheets/d/1oUMIpE_Elh_CYD7DFbT1vbYxFZNYUDK2QxFqFDk4xII/edit#gid=2008169700') # Original Data\ndata = gsheet2tbl('https://docs.google.com/spreadsheets/d/1oUMIpE_Elh_CYD7DFbT1vbYxFZNYUDK2QxFqFDk4xII/edit?gid=0#gid=0') # Manually cleaned data (it was easier to edit it in the spreadsheet)\nCode\nquestions = colnames(data)\ncolnames(data) = c('timestamp', 'name', 'birthday', 'parents', 'names.indexed', 'ordinances.self', 'ordinances.dead', 'fav.recipe', 'gen', 'tech.savviness', 'injuries', 'num.trips', 'trips', 'num.pets', 'pets', 'fav.part', 'suggested.activity', 'suggested.reunion.location', 'jobs', 'most.told.story', 'oldest', 'rating', 'fav.game', 'secret', 'best.advice', 'worst.advice', 'coming')\ndata$age = floor((today() - mdy(data$birthday)) / 365) |&gt; as.integer()\ndata$first.name.raw = str_split(data$name, pattern=' ') |&gt; map(~ .x[[1]]) |&gt; as.character()\nCode\n# Function to make names unique\nmake_names_unique &lt;- function(names) {\n    # Create a data frame to store the unique names and their counts\n    name_counts &lt;- data.frame(names, count = ave(names, names, FUN = seq_along))\n\n    # Append the count to the names if count &gt; 1\n    name_counts &lt;- name_counts %&gt;%\n        mutate(unique_names = ifelse(count == 1, names, str_c(names, \" #\", count)))\n\n    return(name_counts$unique_names)\n}\n\ndata$first.name = make_names_unique(data$first.name.raw)\nCode\n# Some people (the Hardy's) put in ridiculous data\n# This is fun for some graphs, but not others\nserious_data = data |&gt;\n    filter(tech.savviness != 10 | first.name == 'Copeland') |&gt;\n    filter(!(first.name.raw %in% c('Bethany', 'Trump', 'Biden', 'Wuss')))\nCode\ntheme_set(theme_xkcd())\ntheme_update(\n    plot.background = element_rect(fill='#222222'),\n    panel.grid.major = element_line(color='#807f7f'),\n    panel.background = element_rect(fill='#3f3f3f'),\n    axis.text = element_text(color='gray90'),\n    plot.title = element_text(color='gray90', size=25),\n    plot.subtitle = element_text(color='gray90', size=20),\n    # plot.subtitle = text,\n    # legend.text = text,\n    # axis.text.x = text,\n    # axis.text.y = text,\n    text=element_text(color='gray90', size=20),\n)\ncolor = '#226796'\nCode\n# I got sick of repeatedly doing this by hand\ngeom_arrow = function(x, y, dx, dy, text='', head='closed', text_dx=0, text_dy=0, arrow_head_len_in=.15){\n    return(list(\n        annotate('segment', xend=x, yend=y, x=x+dx, y=y+dy,\n            arrow=arrow(type = head, length=unit(arrow_head_len_in, 'inches')),\n            color=theme_get()$text$colour,\n        ),\n        annotate('text', x=x+dx+text_dx, y=y+dy+text_dy,\n            label=text,\n            family=theme_get()$text$family,\n            size=theme_get()$text$size / 3,\n            color =theme_get()$text$colour,\n        )\n    ))\n}\nCode\nmean.age = mean((data %&gt;% filter(., !is.na(age)))$age)\nggplot(data, aes(x=age)) +\n    geom_vline(xintercept = 0, color='white') +\n    geom_histogram(bins=25, fill=color, color=theme_get()$panel.background$fill) +\n    # scale_x_binned(transform = 'sqrt')\n    geom_arrow(x=1000, y=2, dx=-40, dy=2, text='2/3 Nephites', text_dy=1) +\n    geom_vline(xintercept = mean.age, color='red') +\n    annotate('text', x=mean.age + 130, y=18, label=paste0('Average age is: ', round(mean.age, 1)), color=theme_get()$text$colour, size=6, family=theme_get()$text$family,) +\n    geom_arrow(x=-73, y=1, dx=80, dy=10, text='One person from the future', text_dy=1) +\n    labs(\n        title='The Distrobution of Ages at the Family Reunion',\n        y='Number of People',\n        x='Age'\n    )\nCode\ndata |&gt; arrange(desc(age)) |&gt; head(8) |&gt; select(name, age) |&gt; clipr::write_clip(allow_non_interactive = T)\nCode\ndata |&gt;\n    filter(!is.na(rating)) |&gt;\nggplot(aes(x=rating)) +\n    geom_histogram(bins=11, color=theme_get()$panel.background$fill, fill=color) +\n    scale_x_binned(breaks = 0:10) +\n    labs(title = \"How much Everyone Enjoys the Family Reunion\")\nCode\nserious_data %&gt;%\n    filter(injuries &gt; 1) |&gt;\nggplot(aes(x=reorder(first.name, desc(injuries)), y=injuries)) +\n    geom_col(fill=color) +\n    geom_arrow(x=3.5, y=8, dx=3, dy=-.5, text='Clearly, I underestimated how much some people get hurt (TYLER)', text_dy=-.2) +\n    theme(axis.text.x = element_text(angle=45,vjust = .7)) +\n    labs(title='People who were Injured the Most in the Last Year', x='')\nCode\nggplot(serious_data |&gt; filter(num.trips &gt; 2), aes(x=reorder(first.name, desc(num.trips)), y=num.trips)) +\n    geom_col(fill=color) +\n    theme(axis.text.x = element_text(angle=45, vjust = .9, hjust = .5)) +\n    scale_y_continuous(breaks=seq(0, 9, 1)) +\n    labs(title = 'Who takes the Most Trips', x='', y='Number of trips')\nCode\n# eval: false\n# echo: false\n# I cannot for the life of me figure out why it's doing this. It just started doing it randomly. I'm starting\n# to seriously suspect a bug in ggplot2.\nhonorable_mentions = c('Rice and butter', 'Pinto beans, Kale, and herbs on sourdough bread toasted with cheese on top.', 'Mash sauce', 'I love food', 'Horse apple', 'Danaes famous Grilled salmon', 'Chaos', 'Chinese takeout', 'Anything grandma makes', 'Black bean, rice, bell pepper, and mango with a lime dressing')\n# honorable_mentions = c()\ndata %&gt;%\n    group_by(fav.recipe) %&gt;%\n    mutate(order = n()) |&gt;\n    filter(!is.na(fav.recipe)) |&gt;\n    filter(order &gt; 1 | fav.recipe %in% honorable_mentions) |&gt;\nggplot(aes(y=reorder(fav.recipe, order))) +\n    geom_bar(orientation = 'y', stat='count', fill=color) +\n    scale_x_continuous(breaks=0:6) +\n    annotate('text', x=3, y=10.7, label='Honorable Mentions') +\n    geom_hline(yintercept = 10.5, color='#cc312c') +\n    labs(title = 'Everyone\\'s Favorite Family Recipies', y='', x='Number of people who say it\\'s their favorite')\nCode\ndata |&gt;\n    group_by(first.name.raw) %&gt;%\n    mutate(order = n()) |&gt;\n    filter(order &gt; 1) |&gt;\n    filter(!is.na(first.name.raw)) |&gt;\nggplot(aes(y=reorder(first.name.raw, order))) +\n    geom_bar(fill=color) +\n    geom_arrow(x=3.5, y=2.6, dx=-.5, dy=-.7, text='Bethany is REALLY coming', text_dy = -.08) +\n    labs(title = 'How Many of Us Share the Same First Name', y='', x='How many times someone with that first name took the survey')\nCode\nstr_split(na.omit(serious_data$ordinances.self), ',') |&gt;\n    flatten() |&gt;\n    tibble() |&gt;\n    rename(Ordinance=1) |&gt;\n    mutate(Ordinance=str_trim(Ordinance)) |&gt;\n    count(Ordinance) |&gt;\n    rename(count=n) |&gt;\n    mutate(count = as.character(count), Ordinance=as.character(Ordinance)) |&gt;\nggplot(aes(x=Ordinance, y=count)) +\n    geom_col(fill=color) +\n    geom_arrow(x=3, y=0, dx=0, dy=.5, \"I totally know how to spell initiatiories\", text_dy=.05) +\n    # scale_y_continuous(breaks = 0:6) +\n    labs(title = 'How many live ordinances have happened this year?')\nCode\nserious_data |&gt;\n    filter(age &lt; 200) |&gt;\n    arrange(age) |&gt;\nggplot(aes(x=age, y=tech.savviness)) +\n    geom_point(color=color, size=3) +\n    geom_smooth(method='lm', se=F, na.rm=T) +\n    annotate('text', x=92, y=4.6, label='Surprisingly, there doesn\\'t seem to be a significant correlation between age and tech savviness', size=5, family=theme_get()$text$family, color=theme_get()$text$colour) +\n    labs(y=\"Tech Savviness\", title='Tech Savviness vs. Age')\nCode\noptions(\n    # No idea why it's adding bars unless I size it just right\n    repr.plot.width=7.56,\n    repr.plot.height=8\n)\ndata |&gt;\n    filter(!is.na(names.indexed)) |&gt;\n    mutate(indexed = ifelse(names.indexed &gt; 0, 'did', \"didn't\")) |&gt;\n    group_by(indexed, label=indexed) |&gt;\n    summarize(indexed = n()) |&gt;\nggplot(aes(y=indexed, x='', fill=label, label=glue('{indexed} People {label}'))) +\n    geom_col() +\n    theme(\n        panel.background = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank(),\n        # axis.text.y = element_blank(),\n        panel.grid=element_blank(),\n        # axis.text = element_blank(),\n        legend.position = 'none',\n        plot.title = element_text(hjust=.5),\n    ) +\n    geom_text(position=position_stack(vjust=.5), family=theme_get()$text$family, size=7) +\n    coord_polar(theta='y') +\n    labs(x='', y='', title='How many People did Indexing this Year', caption=\"Sorry, I used the wrong input on the survey\")\nCode\noptions(\n    # No idea why it's adding bars unless I size it just right\n    repr.plot.width=7.59,\n    repr.plot.height=8\n)\ndata |&gt;\n    filter(!is.na(oldest)) |&gt;\n    group_by(oldest, label=oldest) |&gt;\n    summarize(oldest = n()) |&gt;\nggplot(aes(y=oldest, x='', fill=label, label=glue('{oldest} said {label}'))) +\n    geom_col() +\n    theme(\n        panel.background = element_blank(),\n        axis.title = element_blank(),\n        axis.ticks = element_blank(),\n        # axis.text.y = element_blank(),\n        panel.grid=element_blank(),\n        # axis.text = element_blank(),\n        legend.position = 'none',\n        # plot.title = element_text(hjust=.5, family=theme_get()$text$family, size=15),\n        # plot.subtitle = element_text(hjust=.5, family=theme_get()$text$family, size=15),\n    ) +\n    geom_text_repel(position=position_stack(vjust=.5), family=theme_get()$text$family, size=6) +\n    coord_polar(theta='y') +\n    labs(x='', y='', subtitle='Blair is 83% the oldest sibling', title='Who is the oldest sibling?')"
  },
  {
    "objectID": "familyGraphs.html#interesting-lists",
    "href": "familyGraphs.html#interesting-lists",
    "title": "Final Project Data",
    "section": "Interesting Lists",
    "text": "Interesting Lists\n\n\nCode\nlists = data |&gt; select('name', 'worst.advice', 'best.advice', 'secret', 'fav.game', 'most.told.story', 'suggested.reunion.location', 'suggested.activity', 'fav.part')\n\n\n\n\nCode\noptions(\n    repr.matrix.max.rows=200,\n    repr.matrix.max.cols=200\n)\nlists\n\n\n\n\nA tibble: 56 × 9\n\n\nname\nworst.advice\nbest.advice\nsecret\nfav.game\nmost.told.story\nsuggested.reunion.location\nsuggested.activity\nfav.part\n\n\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n&lt;chr&gt;\n\n\n\n\nAmy \nSpank your kid \nWhen angry with spouse go to sleep \nI love car chases in movies \nWater fight \nMy birth story \nFiji \nFishing \nPrograms & laughing with everyone \n\n\nDanae Weber\nSleep when the baby sleeps... Do the dishes when the baby does the dishes. Do the laundry when the baby does the laundry.\nDon't be an idiot. Changed my life.\nI'm a pretty good event planner\nSpin the bottle\nGrandma being tired of her boys fighting, so she tossed them in the yard with boxing gloves and told them to duke it out\nHawaii\nStrong gene games\nStaying up late\n\n\nJaren\nI recommend buying a fleet of transports right now\nPraise in public\nI love writing poetry\nStrip crib\nGrandpa Dee ALMOST catching a jack rabbit with his bare hands\nHolland\nWater skiing\nStaying up late\n\n\nBlair\nNA\nCause that is what we do\nHam radio operator\nNA\nNA\nNA\nPickleball\nRenewing friendships\n\n\nMcKelle\nJust take care of yourself\nThuesons love and serve one another!!\nI’m missing the reunion because I’m in Peru!\nNA\nNA\nCamping somewhere new\nNA\nGames\n\n\nKatelan Shakespear\nIt’s ok to go to bed mad at each other\nDon’t let your kids sleep in your bed.\nI hate olives\nRelays, volleyball, pickleball\nWhen she was having babies!\nAnywhere, as long as we have it!\nBig group games\nTalking around the camp fire\n\n\nKelli Thueson\nDon’t go to the doctor’s office if you only have one problem. Wait until you have four or five; that’s how you get the most bang for your buck.'\nMy feelings don’t have an IQ\nI can roll my tongue into the shape of a cover\nPickleball\nBaby Blair throwing up root beer float (i think) on her busty grandma in the car and it going down said grandmother’s blouse.\nHawaii\nSteak on rocks\nGames at night\n\n\nJenelle Thueson\nNA\nKeep smiling\nHow many missions have I been on so far?\nNA\nTeton Dam flood\nPlace doesn’t matter to me\nNA\nBeing together sharing testimonies\n\n\nLyndee\nNA\nNA\nHow many fake teeth I have\nSigns\nGrandpa catching the rabbit\nNA\nEat scones\nRafting and sunshine\n\n\nLauren\nDon't be helpful\nBe brave\nI have no secrets\nShaving cream on pop\nNA\nNA\nNA\nSwimming, okay with cousins\n\n\nMatt\nTry it you might like it.\nJust because it’s fun doesn’t mean it’s not dumb\nI don’t like hand and foot\nPickleball\nLiving in mud lake\nOn Cruise ship\nFamily cruise\nRelaxing / pickleball\n\n\nLydia\nbe yourself\nyou can’t put a price on feeling ✨bonita✨\ni’m the funniest person ever i just don’t show it so i don’t make everyone’s brain explode\nnight games with cousins\ngreat grandma Annie in the pot\nBEACH (Ryan Gosling 2024💖🇺🇸)\nfloat a different river\nfloating the river\n\n\nSteve Thueson\n“Don’t be dumb, even if it’s fun!” Grandma Thueson. JK\n‘Cause that’s what we do” Grandpa Dee\nWhen I was eight me and my friend went skinny-dipping in the canal around the Rexburg golf course!\nWater fight\nRelated to William Bradford\nPhilippines\nJust be there\nCatching up, seeing young cousins play, testimony meeting, karaoke\n\n\nDeidra\nYou like seafood, try the calamari 🤮\nEnjoy every part of raising little kids🤗 even the exhausting parts, they’ll be big before you know it!\nI never had a date try for a goodnight kiss without being asked first 🙅🏼‍♀️😘\n💦Water games are always fun!\n😍 How Grandpa Dee is the most amazingly handsome guy there is! Nobody’s got muscles and those gorgeous blue eyes like grandpa 🥰\nSomewhere 😎 sunny, by hiking and swimming, call about the 🇵🇭Philippines?\nHugs all around 🥰\n😁Visiting, catching up with everyone.\n\n\nDonna Burrows Thueson\nIf somebody gave me bad advice, I put it out of my mind forever when I discovered its value\nTreat your husband like a king and he will treat you like a queen\nI was a champion Jack’s player in the fourth grade\nHand and Foot\nNA\nFrance for the Olympics\nTalk some genealogy\nAll of it\n\n\nTacy Kirkham\nEat that\nConnection is not too much and not too little.\nI have a book I would like to publish one day\n9 square\nGrandpa and her kissin\nDA Ranch\nGestures\nThe peeps!!\n\n\nSusan\nDon’t go to bed angry\nBelieve in God\nI feel guilt about how much I love clay\nPickleball\nWilliam Bradford\nStanley\nPainting, carving\nTalking around a fire\n\n\nSup\nDon’t go to bed angry\nPick your battles\nOwned 32 cars in 25 years of marriage\nPickleball\nLiving in a pig sty when first married\nOregon Coast\n4 wheeling\nFloating the river\n\n\nCopeland Carter\nDo unto others as you would have others do unto you (not a joke, terrible advice)\nIf you're standing on train tracks, and there's a train coming, you don't dig in your heals, you get off the tracks.\nI love rollerblading\nPoo Head\nThe time she and grandpa were in the cemetery and grandpa ran off and tried to lose her\nThe moon\nSkeet Shooting\nFree food\n\n\nMonty\nDon’t let the son go down on your wrath in a marriage\nYour most valuable asset is your own capacity to earn. Or fight naked.\nI sneak raisins\n9 square\nSomething about Governor Bradford\nMount Vernon\nPatriotic moments\nCatching up conversations\n\n\nMadilyn\nDon't join the moshpit\nDon't fall down in a moshpit\nLike to be in the center of the moshpit\nMoshpit\nDave's conception\nThe club\nMoshpit\nThe moshpit\n\n\nBiden\nWork at the homestead\nCoconut oil\nMy name\nKube\nDave’s conception\nAnywhere but sams\nMock congress\nCopeland\n\n\nTrump\nWork at the homestead\nCoconut oil\nWho I am\nAvoiding the aunts\nDave’s conception\nAnywhere but Sam’s\nBlair and Amy debat\nWatching Blair and Amy\n\n\nWuss boy\nNA\nNA\nNA\nNA\nDave’s conception\nOnly Sam’s\nScuba dive\nCopland\n\n\nNoah\nTo ignore my dreams\nProbably shouldn’t kiss me cousins\nI think there are hot cousins\nSpin bottle\nDave’s conception\nMy house\nSpin the bottle\nThe hot cousins\n\n\nBrigham\nDon’t marry Kali\nDon’t be a dancer\nI had a crush on Hannah\nFree babysitting\nDave’s conception\nThe temple\nPee into a toilet at the same time\nThe end\n\n\nAmmon\nCome to earth\nTalk to Blake about insurance\nI’m gay\nWon’t be there\nDave’s conception\nAmy’s backyard\nWho’s the best kisser\nStarring at noah\n\n\nKali\nTry everything\nLove everyone\nHow wise I am\nArt\nDave’s conception\nThe sawtooths\nCard games\nTalking\n\n\nBethany\nDon’t swear\nAlways ALWAYS keep your garments on\nIt’s a wig\nShaving cream in my hair\nDave’s conception\nOn the beach\nEnd early\nLeaving\n\n\nBethany\nChoose female\nDon’t eat the yellow snow\nI’m bald\nBack rubs\nDave’s conception\nSawtooths\nSeeing all your beautiful faces\nEverything\n\n\nBethany\nListen to others.\nI have only given good advice. Never taken it.\nI am filled with hate\nFighting\nDave’s conception\nOn the river\nKayaking\nFighting\n\n\nDave\nDo unto other as was done unto toy\nCorrect way to conceive\nDefinitely not my conception\nTalking to my family\nMy conception\nHere on the mission\nPork and beans\nBlair and Amy arguing\n\n\nJordan Hardy\nDon’t live by Blake\nBe like Blake\nI love Blake\nAnything with Blake\nDave’s conception\nBlake’s house\nTalk to blake\nBlake\n\n\nAutum Hardy\nDon’t vote Biden\nVote biden\nI’m a liberal\nPoo Head\nDave’s conception\nThe abortion clinic\nChew on one piece of jerky all day\nHearing about Dave’s conception\n\n\nJordan Hardy\nNA\nNA\nNA\nHand and Foot\nNA\nBoise\nA group run/walk\nThe Family\n\n\nSavannah Hardy\nTwins are easy\nBe yourself and the people who love that personality will be never force you to change for them\nBoth my thumbs are double jointed\nHand and Foot\nWhen she forced her husband to get up one night to help when everyone was vomiting and other than that he never helped with the kids\nThe Boise area ranch\nSkits with mixed family teams\nThe family games\n\n\nBethany\nGet a dog\nGet a dog\nI really really want to do some arctic kayaking. Probably in Svalbard.\nSpoons\nMaking her sons beat each other up\nSome awesome national park like Glacier or Zions or Yosemite\nSomething water based\nCatching up\n\n\nCarlene\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nVisiting\n\n\nShane Ririe\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAddi Hardy\nAlex tells me not to list w to good people.\nMom lets me play video games with her.\nI’m a princess. When I grow up I will live in a castle.\nCandyland\nShe’s never told me a story\nThe beach\nSnow cones\nThe little sand excavator toy\n\n\nKali\nThat McDonald’s has good fries… 🥴\nDon’t go to bed mad at your spouse.\nI was offered a college scholarship to play soccer way back when!\nNA\nKim sitting cross legged on the floor days after the twin’s birth.\nAnywhere in the Mountains\nEvening bonfires\nCatching up with everyone\n\n\nAlex Hardy\nThat Addi and I aren’t twins, and we shouldn’t be with each other, and we should be a part, and we don’t eat with each other\nNA\nThey don’t know how old I am, or my name, and they don’t know what I have in my house, or where my house is.\nFreeze tag\nNA\nNA\nSand\nThe sand and the water and the food and paying\n\n\nMia Hardy\nIdk\nGo on a mission\nIdk\nI don’t really play games\nHow grandpa proposed to grandma\nWhere I live\nVolleyball\nThe food\n\n\nBraden Pittman\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nQelvin Kirkham\nEverything happens for a reason/No use crying over spilled milk.\nSay, Go, Be, Do.\nI have two living grandparents, neither related to me by blood.\nAll of them\nBoxing Gloves\nFlorida\nAirsoft/Nerf battle\nGames\n\n\nShan\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nUnstructured time for chatting\n\n\nCam\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nUnstructured time for chatting\n\n\nRudi\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nUnstructured time for chatting\n\n\nNori\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nUnstructured time for chatting\n\n\nLacey\nFollow the food pyramid\nGo to the temple every week.\nNA\nHand and Foot\nNA\nDoesn’t matter where to me, as long as I get to see everyone!\nPaint\nVisiting\n\n\nTyler Thueson\nIdk\nIf your gonna be dumb you better be tough\nI’m a open book\nWater fight\nBeing poor\nCamping true camping like palisades big elk creek or moddy Medows or felt or Kilgore\nIndian rug races\nThe uncles\n\n\nDax Thueson\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nAva Thueson\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nTate Thueson\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nMikaela Thueson\nJust do it\nNA\nI’m terrified of hights\nNA\nHow naughty Tyler was as a little boy ;)\nCamping in the mountains\nFun minute to win it games\nTestimony meeting\n\n\nMoriah Carter\nIt's too late to learn something new\nNobody gives me advice: I do my own research\nI completed high school and college in six years total\nRummikub\nDee not liking onion or celery at the beginning of their marriage. One day he saw her getting onion and celery ready for fricassee and he said don't put it in so she didn't and he said it didn't taste right and she shouldn't make it like that ever again\nDurango, Colorado\nSwitching out my fair style lemonade for hard lemonade\nThe unholy amount of fair style lemonade I will consume"
  },
  {
    "objectID": "posts/Rose/index.html",
    "href": "posts/Rose/index.html",
    "title": "Rose (The Relationship Evaluation Algorithm)",
    "section": "",
    "text": "Being single is hard. At least, it was for me. Some people are jerks. Some people are your future relationships. Hopefully, one person is your future spouse. How can you tell the difference?\nFor me, as with many people, this was a hard problem. It doesn’t help that as soon as you find someone cute, my mind kinda went blank. I’ve seen it in myself, and I’ve seen in my friends. They have all these standards, and then change them as soon as they meet someone, and then getting hurt.\nWell, after one particularly bad breakup, I had had enough. Surely there was a way to figure out if someone wasn’t right for you before dating them and getting hurt, instead of after.\nAnd that was when Rose was born."
  },
  {
    "objectID": "posts/Rose/index.html#the-concept",
    "href": "posts/Rose/index.html#the-concept",
    "title": "Rose (The Relationship Evaluation Algorithm)",
    "section": "The Concept",
    "text": "The Concept\n\nThe Algorithm\nThe idea is you have a list of attributes that are relevant to relationships. Everything you can possibly think of, from deep stuff like, “You feel like you can trust them”, to [hopefully] obvious stuff like, “You like them”, to frivilous stuff like, “They’re tall”. All the attributes have to be phrased in that way.\nThen, you go through all the questions twice. Once, when you’re unbiased, for instance when you’re single, and for each question, ask yourself, “how important is it to me that… [attribute]?”. For example, “How important is it to me that I feel like I can trust them?”. And you answer that on a scale of -1 to 1, -1 being “Absolutely not, I don’t want that”, and 1 being “absolutely, I need that”. You can also set attributes as dealbreakers, but be very sparing about that. A lot of things that you think are dealbreakers may not be. These are your preferences.\nThen you set thresholds for each kind of relationship that reflect how “picky” you are. 10% being “I’ll enter a relationship with them as long as they breathe”, and 90% being “they have to be almost perfect”. You set thresholds for being friends, dating, and marriage. And maybe engagement, depending on how you think of it.\nThen, later on, when you’re thinking about entering, exiting, or changing a relationship with someone, you can think of that person, and for each question, ask yourself “Do I feel like… [attribute]?”. For example, “Do I feel like I can trust them?”. You answer that question on a scale of 0 to 1, 0 being “no, not at all”, and 1 being “yes, entirely”. These are your evaluations\nThen, for each question, you multiply your preferences * your evaluations, and take the weighted average of all the attributes, and compare it against the thresholds you set. If they scored a 70%, and your threshold for dating is 60%, then it makes sense to date them.\n\n\nAdvantages\nThe advantages of using this algorithm, is that you can always add more attributes. The more attributes you have, the more accurate the answer will become. When creating the boilerplate list of attributes for the 3rd Rose incarnation, I did research. I kept a running list on my phone, and whenever I thought of something, I’d write it down. I observed happy couples I knew, and watched for attributes they did or didn’t do. I asked my friends, my roommates, my parents, I interviewed couples.\nThe other advantage, is that you can take into account emotions with it. I know for me, at least, if somebody asks me if I feel a certain way about something/someone, I’m like, I have no idea. That’s a big question. But if you break it down, and ask “How do you feel about them doing this?”, and ask a bunch of smaller questions, those I can ask with more certainty.\nOf course, it’s not perfect. It’s not the end-all be-all of deciding to date someone. It doesn’t elliminate all hurt; you still have to date and get your heart broken to find out the things you do and don’t prefer. Tuning your preferences is the hardest part about it.\nBut I think it’s very helpful. I can think of several couples I know who are divorced, or who have very unhealthy relationships, because they were wearing the “rose-colored glasses” when they were dating, only to take them off once they were married, only to find out afterwards that they weren’t thinking clearly the entire time. Rose is aimed at helping you take off the rose-colored glasses, and evaluate someone objectively, so you can avoid that situation. At the very least, it can help you think about important things and have important discussions with your significant other before you rush into something. Or it could do the opposite, it could help you realize you’re not overthinking, and it does make sense, even though it might not feel like it."
  },
  {
    "objectID": "posts/Rose/index.html#the-implementation",
    "href": "posts/Rose/index.html#the-implementation",
    "title": "Rose (The Relationship Evaluation Algorithm)",
    "section": "The Implementation",
    "text": "The Implementation\n\nCommand Line\nIt started off as a command line Python program. I had a cool idea, I wanted to actually be able to use it and trust it wouldn’t break, and I didn’t trust my ability to write UI’s at the time. So command line it is.\nHere’s the original script, if you’re interested. It’s pretty short, and wasn’t perfect, but it worked.\n\n\nCode\nimport json\nfrom os.path import dirname, join; DIR  = dirname(__file__)\n\n# Specify these 3\nMAX_NUM = 100\nTOLERANCES = {\n    \"Leave Be\": -MAX_NUM,\n    \"Date\":  0,\n    \"Marry\": MAX_NUM * .9\n}\npreferencesFile = join(DIR, \"girlfriendPreferences.json\")\n\nwith open(preferencesFile, 'r') as f:\n    traits = json.load(f)\n\ndef getInput(trait):\n    _input = input(trait.capitalize() + ': ').strip().lower()\n    if _input in 'y ya yeah yes si true definitely accurate'.split():\n        return 1\n    elif _input in ('n', 'no', 'not', 'nien', 'false', 'nope', 'not really'):\n        return 0\n    elif _input in ('none', 'na', 'n/a', 'not applicable'):\n        return None\n    elif _input in ('sure', 'kinda', 'i guess', 'kind of'):\n        return 0.7\n    else:\n        try:\n            mod = float(_input)\n            if mod &gt;= -1 and mod &lt;= 1:\n                return mod\n            else:\n                raise TypeError()\n        except:\n            print(\"Invalid input\")\n            return getInput(trait)\n\ndef applyTolerance(amt):\n    for action, tolerance in sorted(TOLERANCES.items()):\n        if amt &gt;= tolerance:\n            return action\n    raise UserWarning(\"You've somehow scored less than is possible.\")\n\ngirl = net = count = 0\nfor trait, weight in traits.items():\n    modifier = getInput(trait)\n    if modifier is None:\n        continue\n    else:\n        girl  += modifier * weight\n        net   += weight\n        count += 1\n\nif not count:\n    print('I think you need to learn more about this girl.')\n\nprint(f'\\nOut of the {count} traits evaluated, this girl scored {girl / count} out of {net / count}. She is good to {applyTolerance(girl / count).lower()}.')\n\n\nAnd here’s an updated script I wrote a couple months later, after my best friend was trying to deciding whether to get engaged to her then boyfriend. After going through it with her, I actually helped her convince herself that she wasn’t overthinking things (spoiler alert: they’re now married): Rose 2.0\n\n\nPyQt5\nLater on, after talking about it to my dad & cousin, they thought it was a fantastic idea, and encouraged me to work on it some more. I had my parents take it, which was fun. I honestly don’t remember the outcome, but I remember my mom complaining that a “-10 to 10 scale is too hard to understand”. At that point, I had worked on a couple other projects using Qt, so I wrote a user interface that would let people actually use my program, instead of needing to know how to use the command line and such.\nWhile a good idea, and the program is actually relatively useable out of the box, if you know how to clone a repo and run a python program, it’s still not “deployable”. Python really isn’t great for making programs that other people can use.\nThe code for that is in this repo: Rose 3.0\nI actually did end up using it while dating an equally-nerdy girl, who actually suggested we use it on each other for a date. While not really how the program is intended to be used, you’re supposed to fill out your preferences before you meet someone, so you can be objective, it was still a lot of fun, and broke the ice on a lot of deep questions.\n\n\nSpreadsheet\nLater on, I learned linear algebra, statistics, and spreadsheets. I’m not a huge fan of spreadsheets, I feel like generally programming is easier, and scales much better, but they are super useful for small stuff like this. I put all the questions in a spreadsheet, and copied some cells from the spreadsheet we used in my statistics class, and recreated it in Google Sheets (Excel costs money, and I hate Microsoft). I then realized, the way I was calculating the answer, could be improved. If you think of your preferences as a hypothetical person, and think of your optimal hypothetical person and the actual person you’re evaluating as mathmatical vectors, in an N-dimentional space of all people, the problem becomes: is this person you're evaluating within a certain distance away from your optimal person, in this space?. Which can easily be calculated using linear algebra.\nExcept then, I also realized you can ask the question using statistics, and that way you can get a specific P-value, and your “pickiness” value just becomes the threshold of the P-value.\nBut then you could also take into account your uncertainties for each answer you provide, and incorperate that to get a specific uncertainty value of the average…\nI then went down a rabbit hole of linear algebra, statistics, and spreadsheets for about an hour and a half, utill I finally gave up and just asked the girl sitting next to me the entire time if she would like to start dating. She said yes, and a few months later, she said yes again. We’re now married.\n\n\nThe Future\nEventually, I want to rewrite it again as a website, now that I know React. That way it’s actually accessible to other people. It’s been somewhat less relevant, now that I’m married, but I still want to finish it eventually.\nIt also can be generalized to make all sorts of decisions. I used a similar concept when my wife was trying to decide whether to go to vet school or not. It’s sort of like a mathmatically accurate pro-con list."
  },
  {
    "objectID": "posts/InstallingTensorflow/index.html",
    "href": "posts/InstallingTensorflow/index.html",
    "title": "Installing Tensorflow",
    "section": "",
    "text": "Getting tensorflow to use hardware acceleration is challenging. There’s plenty of tutorials to show you how to do it, but I’ve found that most of them lack sufficient detail, aren’t targeted towards what I’m doing (they’re made for super computing clusters or fine-grain control, or something), or are outdated. The ML field is moving fast right now, and things get outdated fast.\nWell, here’s yet another blog post. This is what I did to get tensorflow to connect to my GPU, maybe it’ll help you.\n\nHardware\nFirst off, some hardware. Tensorflow seems to work best on NVIDIA GPUs. I’m told it’s possible to get it to work on an AMD GPU, but the one time I tried, I couldn’t get it to work. You can see this for-pay article for more guidance, in that case.\nHere’s my screenfetch: \n\n\nGuide\nWhen I set it up, I followed this blog post. It contains a lot of good detail, so instead of repeating everything it says, just follow it, and I’ll tell you what I had to change to get it to work.\nWhen installing drivers, I installed nvidia-driver-550, and then had to restart to activate it, which isn’t in the tutorial. According to this page, anything &gt;=520.;61.05 should work. Later on, while trying to debug the later steps, I ended up installing 525 as well, however, I don’t think that actually fixed anything.\nI also had to install the cuda-toolkit package (sudo apt install cuda-toolkit) to get it to run, which isn’t mentioned in the post.\nInstead of the versions specified in the post, I used these versions specifically:\n\npython3.11\ncuDNN==8.8\ncudatoolkit==11.8\ntensorflow==2.14\n\nNOTE: The cudatoolkit version is the version of the Python package; upon running nvidia-smi, my driver says it’s CUDA version 12.2. This didn’t seem to cause problems.\nI used this table from the post to align all the versions. I had a bit of a problem, because as of 5/22/24, cuDNN==8.7 doesn’t exist on conda for some reason, and cudatoolkit&gt;=12 was not released on conda yet, so had to use python3.11 and guess at some of the package versions, but the ones I used worked out.\nAfter following all the steps in the post and running the benchmark test mentioned, it threw and error with a bunch of warnings and errors and traceback and other stuff. After digging through it and some research, I found this stackoverflow post that advised running this command:\nexport XLA_FLAGS=--xla_gpu_cuda_data_dir=/usr/lib/cuda\nwhich worked. You may want to follow the steps in the article to find your specific cuda installation path, but it’s likely /usr/lib/cuda. You’ll also likely want to put that line in your ~/.bashrc file, so it will work in other terminals as well.\nMy benchmarks were:\n\nGPU: 17.934 seconds\nCPU: 219.757 seconds\n\nA 12.25x speedup! Not bad!\n\n\nPhoto courtesy of Coding for Entrepreneurs"
  }
]